{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/Repositorios/desafio-junior-1/petshop-front-end/src/pages/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { IMaskInput } from 'react-imask';\nimport cachorro from '../../img/Dog_paw-amico.png';\nimport logo from '../../img/logonav (1).png';\nimport ShowPasswordImg from '../../img/ShowPasswordImg 1.png';\nimport HidePasswordImg from '../../img/HidePasswordImg 1.png';\n/**\r\n * Componente de login para autenticar usuários.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // Estado para controlar mensagens de erro\n  const [error, setError] = useState(''); // Estado para controlar a visibilidade da senha\n\n  const [showPassword, setShowPassword] = useState(false); // Utiliza o Formik para gerenciar o estado do formulário\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      password: ''\n    },\n    // Validação de campos usando Yup\n    validationSchema: Yup.object({\n      name: Yup.string().required('Obrigatório'),\n      password: Yup.string().min(6, 'Mínimo de 6 caracteres').required('Obrigatório')\n    }),\n    // Função a ser executada quando o formulário for enviado\n    onSubmit: async values => {\n      try {\n        // Realiza uma solicitação POST para a API de login\n        const response = await fetch('http://localhost/user/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        }); // Se a solicitação for bem-sucedida (código 200 OK)\n\n        if (response.ok) {\n          const {\n            token\n          } = await response.json(); // Define um cookie de token de autenticação\n\n          Cookies.set('token', token, {\n            sameSite: 'strict'\n          }); // Redireciona para a página principal\n\n          window.location.href = '/';\n        } else if (response.status === 401) {\n          // Exibe uma mensagem de erro se as credenciais forem inválidas\n          setError('Usuário ou senha incorretos');\n        } else {\n          // Exibe uma mensagem de erro genérica para outros erros\n          setError('Falha no servidor. Por favor, tente novamente mais tarde.');\n        }\n      } catch (error) {\n        console.error('Erro na solicitação de autenticação', error); // Exibe uma mensagem de erro genérica se ocorrer um erro na solicitação\n\n        setError('Ocorreu um erro na solicitação de autenticação');\n      }\n    }\n  }); // Função para alternar a visibilidade da senha\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex font-bold\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Pgy+CgqocQDAiS++eeRBzu1ir20=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Cookies","useFormik","Yup","IMaskInput","cachorro","logo","ShowPasswordImg","HidePasswordImg","Login","error","setError","showPassword","setShowPassword","formik","initialValues","name","password","validationSchema","object","string","required","min","onSubmit","values","response","fetch","method","headers","body","JSON","stringify","ok","token","json","set","sameSite","window","location","href","status","console","togglePasswordVisibility","prevShowPassword"],"sources":["/home/eduardo/Repositorios/desafio-junior-1/petshop-front-end/src/pages/login/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { IMaskInput } from 'react-imask';\r\nimport cachorro from '../../img/Dog_paw-amico.png';\r\nimport logo from '../../img/logonav (1).png';\r\nimport ShowPasswordImg from '../../img/ShowPasswordImg 1.png';\r\nimport HidePasswordImg from '../../img/HidePasswordImg 1.png';\r\n\r\n/**\r\n * Componente de login para autenticar usuários.\r\n */\r\nconst Login = () => {\r\n    // Estado para controlar mensagens de erro\r\n    const [error, setError] = useState('');\r\n    // Estado para controlar a visibilidade da senha\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    // Utiliza o Formik para gerenciar o estado do formulário\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            password: '',\r\n        },\r\n        // Validação de campos usando Yup\r\n        validationSchema: Yup.object({\r\n            name: Yup.string().required('Obrigatório'),\r\n            password: Yup.string()\r\n                .min(6, 'Mínimo de 6 caracteres')\r\n                .required('Obrigatório'),\r\n        }),\r\n\r\n        // Função a ser executada quando o formulário for enviado\r\n        onSubmit: async (values) => {\r\n            try {\r\n                // Realiza uma solicitação POST para a API de login\r\n                const response = await fetch('http://localhost/user/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(values),\r\n                });\r\n\r\n                // Se a solicitação for bem-sucedida (código 200 OK)\r\n                if (response.ok) {\r\n                    const { token } = await response.json();\r\n                    // Define um cookie de token de autenticação\r\n                    Cookies.set('token', token, { sameSite: 'strict' });\r\n                    // Redireciona para a página principal\r\n                    window.location.href = '/';\r\n                } else if (response.status === 401) {\r\n                    // Exibe uma mensagem de erro se as credenciais forem inválidas\r\n                    setError('Usuário ou senha incorretos');\r\n                } else {\r\n                    // Exibe uma mensagem de erro genérica para outros erros\r\n                    setError('Falha no servidor. Por favor, tente novamente mais tarde.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Erro na solicitação de autenticação', error);\r\n                // Exibe uma mensagem de erro genérica se ocorrer um erro na solicitação\r\n                setError('Ocorreu um erro na solicitação de autenticação');\r\n            }\r\n        },\r\n    });\r\n\r\n    // Função para alternar a visibilidade da senha\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex font-bold\">\r\n            {/* Coloque o restante do seu JSX aqui */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAGhB;;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD,CAJgB,CAMhB;;EACA,MAAMc,MAAM,GAAGZ,SAAS,CAAC;IACrBa,aAAa,EAAE;MACXC,IAAI,EAAE,EADK;MAEXC,QAAQ,EAAE;IAFC,CADM;IAKrB;IACAC,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,CAAW;MACzBH,IAAI,EAAEb,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,aAAtB,CADmB;MAEzBJ,QAAQ,EAAEd,GAAG,CAACiB,MAAJ,GACLE,GADK,CACD,CADC,EACE,wBADF,EAELD,QAFK,CAEI,aAFJ;IAFe,CAAX,CANG;IAarB;IACAE,QAAQ,EAAE,MAAOC,MAAP,IAAkB;MACxB,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;UACxDC,MAAM,EAAE,MADgD;UAExDC,OAAO,EAAE;YACL,gBAAgB;UADX,CAF+C;UAKxDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;QALkD,CAAhC,CAA5B,CAFA,CAUA;;QACA,IAAIC,QAAQ,CAACO,EAAb,EAAiB;UACb,MAAM;YAAEC;UAAF,IAAY,MAAMR,QAAQ,CAACS,IAAT,EAAxB,CADa,CAEb;;UACAjC,OAAO,CAACkC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,EAA4B;YAAEG,QAAQ,EAAE;UAAZ,CAA5B,EAHa,CAIb;;UACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;QACH,CAND,MAMO,IAAId,QAAQ,CAACe,MAAT,KAAoB,GAAxB,EAA6B;UAChC;UACA7B,QAAQ,CAAC,6BAAD,CAAR;QACH,CAHM,MAGA;UACH;UACAA,QAAQ,CAAC,2DAAD,CAAR;QACH;MACJ,CAxBD,CAwBE,OAAOD,KAAP,EAAc;QACZ+B,OAAO,CAAC/B,KAAR,CAAc,qCAAd,EAAqDA,KAArD,EADY,CAEZ;;QACAC,QAAQ,CAAC,gDAAD,CAAR;MACH;IACJ;EA5CoB,CAAD,CAAxB,CAPgB,CAsDhB;;EACA,MAAM+B,wBAAwB,GAAG,MAAM;IACnC7B,eAAe,CAAE8B,gBAAD,IAAsB,CAACA,gBAAxB,CAAf;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC;EAAf;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAhED;;GAAMlC,K;UAOaP,S;;;KAPbO,K;AAkEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}