{"ast":null,"code":"import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n/** Mask pipe source and destination types */\n\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\n\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n/** Pipes value through mask depending on mask type, source and destination options */\n\n\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\nexport { PIPE_TYPE, createPipe, pipe };","map":{"version":3,"names":["createMask","IMask","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","from","to","masked","value","runIsolated","m","pipe","mask"],"sources":["/home/eduardo/Repositorios/desafio-junior-1/petshop-front-end/node_modules/imask/esm/masked/pipe.js"],"sourcesContent":["import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,kBAAP;AAEA;;AACA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE,OADQ;EAEhBC,QAAQ,EAAE,eAFM;EAGhBC,KAAK,EAAE;AAHS,CAAlB;AAKA;;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,EAA/B,EAAmC;EACjC,IAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;IACnBA,IAAI,GAAGN,SAAS,CAACC,MAAjB;EACD;;EACD,IAAIM,EAAE,KAAK,KAAK,CAAhB,EAAmB;IACjBA,EAAE,GAAGP,SAAS,CAACC,MAAf;EACD;;EACD,MAAMO,MAAM,GAAGV,UAAU,CAACO,GAAD,CAAzB;EACA,OAAOI,KAAK,IAAID,MAAM,CAACE,WAAP,CAAmBC,CAAC,IAAI;IACtCA,CAAC,CAACL,IAAD,CAAD,GAAUG,KAAV;IACA,OAAOE,CAAC,CAACJ,EAAD,CAAR;EACD,CAHe,CAAhB;AAID;AAED;;;AACA,SAASK,IAAT,CAAcH,KAAd,EAAqBI,IAArB,EAA2BP,IAA3B,EAAiCC,EAAjC,EAAqC;EACnC,OAAOH,UAAU,CAACS,IAAD,EAAOP,IAAP,EAAaC,EAAb,CAAV,CAA2BE,KAA3B,CAAP;AACD;;AACDV,KAAK,CAACC,SAAN,GAAkBA,SAAlB;AACAD,KAAK,CAACK,UAAN,GAAmBA,UAAnB;AACAL,KAAK,CAACa,IAAN,GAAaA,IAAb;AAEA,SAASZ,SAAT,EAAoBI,UAApB,EAAgCQ,IAAhC"},"metadata":{},"sourceType":"module"}